
# Después de analizar gráficamente se aplican pruebas para confirmar que el MRM
# cumple con los supuestos.
#Para aplocar estas pruebas se generan los valores ajustados, residuales y los estandarizados


mochila$ajustados <- fitted(mod)
mochila$residuals <- residuals(mod)

View(mochila) # los residuales no son cercanos a 0

mochila$rstudent <- rstudent(mod)

##### Prueba de normalidad ######

install.packages("lmtest")
require (lmtest)

ks.test (mochila$rstudent, "pnorm") 

# Se plantea una prueba de hipótesis y se espera un p-value mayor a 0.05
# Si tenemos un p-value mayor a .05 NO se rechaza Ho y se dice que hay normalidad

# En este caso el p-value es igual a .7974 por lo que el modelo 
#pasa la prueba de normalidad


###### Prueba de homogeneidad de varianzas con la función bptest

bptest(mod, studentize = FALSE, data = mochila)


# Como p-value (.493) es mayor que 0.05 pasa la prueba de homogeneidad de varianzas

###### Prueba de autocorrelación Durbin Watson

dwtest(mod, alternative = "two.sided", data = mochila)

#  En esta prueba hay dos formas para comprobar:

# 1) p-value mayor a .05
# 2) el valor DW se encuentra entre 1.5 y 2.5

# En este caso DW = 1.8684, p-value = 0.6433
# Por lo que se concluye que no hay autocorrelación ó 
# hay independencia entre los errores


# Con estas pruebas ya se confirma que tenemos un modelo con buen ajuste
# Sin embargo, hay que revisar los casos atípicos


install.packages("car")
require (car)

outlierTest (mod)
outlier.test (mod)

#Una vez que observamos los casos atípicos, procedemos a conocer
# la influencia de estos casos

influencia <- influence.measures(mod)
summary(influencia)

# En la primera columna se observa los casos con mayor influencia
# Para este modelo son 1, 2 y 10
# Las columnas de dbf nos indican lla influencia en los coeficientes del modelo
# las columnas que nos presentan mayor interés son las cook.d y hat, que nos exponen
# con mayor claridad la influencia
# el cook.d es la distancia, mientras más cercano a 1 hay mayor influencia
# La observación 10 es la que tiene mayor distancia de cook.


#### Función influenceplot ()
## El análisis de este gráfico se realiza con base en el tamaño de las circunferecnias
# que arroja, es decir, a mayor circunferencia el caso tiene mayor influencia

influenceplot(mod)

## Gráfica de distancia de cook

install.packages("faraway")
require(faraway)
dc <- cooks.distance(mod)

etiqueta <- row.names(mochila)

halfnorm(dc, 3, etiqueta)
